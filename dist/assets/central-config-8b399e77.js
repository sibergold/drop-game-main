const l={CLIENT_ID:"01JZWNP6AVSWRZSN7X648B1AQ2",OAUTH_SETTINGS:{response_type:"code",scope:"chat:read chat:write user:read channel:read",authorize_url:"https://id.kick.com/oauth/authorize",token_url:"https://id.kick.com/oauth/token",api_base:"https://kick.com/api/v2",proxy_url:(()=>window.location.hostname==="localhost"?"http://localhost:3001":"https://drop-game-proxy.onrender.com")()},DEFAULT_GAME_SETTINGS:{gravity:400,gravity_chute:60,max_velocity:600,wait:60},UI_CONFIG:{theme:{primary_color:"#00ff88",secondary_color:"#9146ff",gradient:"linear-gradient(135deg, #667eea 0%, #764ba2 100%)"},messages:{success:"‚úÖ Authorization successful! Your overlay is ready.",error_no_client_id:"‚ö†Ô∏è Central Client ID not configured. Please contact the developer.",error_auth_failed:"Authorization failed. Please try again.",error_no_chatroom:"No chatroom found for this channel. Make sure you have streaming permissions.",loading:"üîÑ Connecting to Kick...",copied:"‚úÖ Copied!"}},OBS_CONFIG:{default_width:1920,default_height:1080,source_name:"Kick Drop Game",deep_link_protocol:"obs://"}};function u(o){const r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";let n="";for(let s=0;s<o;s++)n+=r.charAt(Math.floor(Math.random()*r.length));return n}async function p(o){const n=new TextEncoder().encode(o);return await crypto.subtle.digest("SHA-256",n)}function f(o){const r=new Uint8Array(o);let n="";for(let s=0;s<r.byteLength;s++)n+=String.fromCharCode(r[s]);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async function g(){const o=u(128),r=await p(o),n=f(r);return{codeVerifier:o,codeChallenge:n}}function _(){return l.CLIENT_ID!=="YOUR_CENTRAL_CLIENT_ID_HERE"&&l.CLIENT_ID.length>0}async function k(o){if(!_())throw new Error("Central Client ID not configured");const{codeVerifier:r,codeChallenge:n}=await g();sessionStorage.setItem("kick_oauth_code_verifier",r);const s=u(32);sessionStorage.setItem("kick_oauth_state",s);const t=new URLSearchParams({client_id:l.CLIENT_ID,redirect_uri:o,response_type:l.OAUTH_SETTINGS.response_type,scope:l.OAUTH_SETTINGS.scope,code_challenge:n,code_challenge_method:"S256",state:s});return`${l.OAUTH_SETTINGS.authorize_url}?${t.toString()}`}async function y(o,r){console.log("üîÑ Starting token exchange via proxy..."),console.log("Code:",o),console.log("Redirect URI:",r);const n=sessionStorage.getItem("kick_oauth_code_verifier");if(console.log("Code verifier found:",!!n),!n)throw new Error("Code verifier not found in session storage");const s={code:o,redirect_uri:r,code_verifier:n},t=`${l.OAUTH_SETTINGS.proxy_url}/oauth/exchange`;console.log("Proxy request body:",s),console.log("Proxy endpoint:",t);const e=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(console.log("Proxy response status:",e.status),!e.ok){const i=await e.json().catch(()=>({error:"Unknown error"}));throw console.error("Proxy token exchange error:",i),new Error(`Token exchange failed: ${e.status} - ${i.error||"Unknown error"}`)}const c=await e.json();return console.log("Token exchange successful via proxy"),sessionStorage.removeItem("kick_oauth_code_verifier"),sessionStorage.removeItem("kick_oauth_state"),c.access_token}async function w(o){try{if(console.log("üîÑ Fetching user info from Kick API..."),console.log("Access token:",o?"YES":"NO"),!(window.location.hostname==="localhost")){const t=await fetch("https://drop-game-proxy.onrender.com/get-kick-user",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({access_token:o})});if(!t.ok){const c=await t.text();throw console.error("Render get-kick-user error:",c),new Error(`get-kick-user failed: ${t.status} - ${c}`)}const e=await t.json();return console.log("User data received from Render function:",e),e}const n=["https://api.kick.com/public/v1/users",`${l.OAUTH_SETTINGS.api_base}/user`,"https://kick.com/api/v1/user","https://kick.com/api/v2/user/me","https://kick.com/api/v1/user/me"];let s=null;for(const t of n)try{console.log("Trying API endpoint:",t);const e=await fetch(t,{headers:{Authorization:`Bearer ${o}`,Accept:"application/json","Content-Type":"application/json"}});if(console.log(`API response status for ${t}:`,e.status),console.log("API response headers:",Object.fromEntries(e.headers.entries())),!e.ok){const a=await e.text();console.error(`API error response from ${t}:`,a),s=new Error(`API request failed: ${e.status} - ${a}`);continue}const c=e.headers.get("content-type");if(console.log("Response content-type:",c),!c||!c.includes("application/json")){const a=await e.text();console.error(`Non-JSON response from ${t}:`,a.substring(0,200)),s=new Error(`Expected JSON response but got: ${c}. Response: ${a.substring(0,200)}`);continue}const i=await e.json();if(console.log("User data received from",t,":",i),t.includes("api.kick.com/public/v1/users")&&i.data&&Array.isArray(i.data)&&i.data.length>0){const a=i.data[0];console.log("üîÑ Getting chatroom ID for user:",a.name);let d=null;try{const h=await fetch(`https://kick.com/api/v1/channels/${a.name}`,{headers:{Accept:"application/json","Content-Type":"application/json"}});h.ok&&(d=(await h.json()).chatroom?.id,console.log("Chatroom ID found:",d))}catch(h){console.warn("Could not get chatroom ID:",h)}return{id:a.user_id,username:a.name,email:a.email,profile_picture:a.profile_picture,chatroom:{id:d}}}return i}catch(e){console.error(`Error with endpoint ${t}:`,e),s=e instanceof Error?e:new Error(String(e));continue}throw s||new Error("All API endpoints failed")}catch(r){throw console.error("Failed to fetch user info:",r),r}}export{l as C,k as b,y as e,w as f,_ as i};
//# sourceMappingURL=central-config-8b399e77.js.map
