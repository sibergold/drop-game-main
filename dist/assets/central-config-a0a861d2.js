const l={CLIENT_ID:"01JZWNP6AVSWRZSN7X648B1AQ2",OAUTH_SETTINGS:{response_type:"code",scope:"chat:read chat:write user:read channel:read",authorize_url:"https://id.kick.com/oauth/authorize",token_url:"https://id.kick.com/oauth/token",api_base:"https://kick.com/api/v2",proxy_url:(()=>window.location.hostname==="localhost"?"http://localhost:3001":"https://parachutegame.netlify.app/.netlify/functions")()},DEFAULT_GAME_SETTINGS:{gravity:400,gravity_chute:60,max_velocity:600,wait:60},UI_CONFIG:{theme:{primary_color:"#00ff88",secondary_color:"#9146ff",gradient:"linear-gradient(135deg, #667eea 0%, #764ba2 100%)"},messages:{success:"‚úÖ Authorization successful! Your overlay is ready.",error_no_client_id:"‚ö†Ô∏è Central Client ID not configured. Please contact the developer.",error_auth_failed:"Authorization failed. Please try again.",error_no_chatroom:"No chatroom found for this channel. Make sure you have streaming permissions.",loading:"üîÑ Connecting to Kick...",copied:"‚úÖ Copied!"}},OBS_CONFIG:{default_width:1920,default_height:1080,source_name:"Kick Drop Game",deep_link_protocol:"obs://"}};function p(t){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";let r="";for(let o=0;o<t;o++)r+=e.charAt(Math.floor(Math.random()*e.length));return r}async function d(t){const r=new TextEncoder().encode(t);return await crypto.subtle.digest("SHA-256",r)}function f(t){const e=new Uint8Array(t);let r="";for(let o=0;o<e.byteLength;o++)r+=String.fromCharCode(e[o]);return btoa(r).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async function g(){const t=p(128),e=await d(t),r=f(e);return{codeVerifier:t,codeChallenge:r}}function _(){return l.CLIENT_ID!=="YOUR_CENTRAL_CLIENT_ID_HERE"&&l.CLIENT_ID.length>0}async function m(t){if(!_())throw new Error("Central Client ID not configured");const{codeVerifier:e,codeChallenge:r}=await g();sessionStorage.setItem("kick_oauth_code_verifier",e);const o=p(32);sessionStorage.setItem("kick_oauth_state",o);const n=new URLSearchParams({client_id:l.CLIENT_ID,redirect_uri:t,response_type:l.OAUTH_SETTINGS.response_type,scope:l.OAUTH_SETTINGS.scope,code_challenge:r,code_challenge_method:"S256",state:o});return`${l.OAUTH_SETTINGS.authorize_url}?${n.toString()}`}async function y(t,e){console.log("üîÑ Starting token exchange via proxy..."),console.log("Code:",t),console.log("Redirect URI:",e);const r=sessionStorage.getItem("kick_oauth_code_verifier");if(console.log("Code verifier found:",!!r),!r)throw new Error("Code verifier not found in session storage");const o={code:t,redirect_uri:e,code_verifier:r},n=window.location.hostname==="localhost"?`${l.OAUTH_SETTINGS.proxy_url}/oauth/exchange`:`${l.OAUTH_SETTINGS.proxy_url}/oauth-exchange`;console.log("Proxy request body:",o),console.log("Proxy endpoint:",n);const a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(console.log("Proxy response status:",a.status),console.log("Proxy response headers:",Object.fromEntries(a.headers.entries())),!a.ok){const c=await a.text();console.error("Proxy token exchange error response:",c);let u=c;try{const h=JSON.parse(c);u=h.error||h.details||c}catch{}throw new Error(`Token exchange failed: ${a.status} - ${u}`)}const i=a.headers.get("content-type");if(!i||!i.includes("application/json")){const c=await a.text();throw console.error("Non-JSON response from proxy:",c.substring(0,200)),new Error(`Expected JSON response but got: ${i}. Response: ${c.substring(0,200)}`)}const s=await a.json();return console.log("Token exchange successful via proxy"),sessionStorage.removeItem("kick_oauth_code_verifier"),sessionStorage.removeItem("kick_oauth_state"),s.access_token}async function T(){try{const t=window.location.hostname==="localhost"?"http://localhost:3001/test":`${window.location.origin}/.netlify/functions/test`;console.log("Testing Netlify function at:",t);const e=await fetch(t,{method:"GET",headers:{Accept:"application/json"}});if(console.log("Test response status:",e.status),console.log("Test response headers:",Object.fromEntries(e.headers.entries())),!e.ok){const o=await e.text();return console.error("Test function error:",o),!1}const r=await e.json();return console.log("Test function response:",r),!0}catch(t){return console.error("Test function failed:",t),!1}}async function k(t){try{console.log("üîÑ Fetching user info from Kick API..."),console.log("Access token:",t?"YES":"NO");const e=["https://api.kick.com/public/v1/users",`${l.OAUTH_SETTINGS.api_base}/user`,"https://kick.com/api/v1/user","https://kick.com/api/v2/user/me","https://kick.com/api/v1/user/me"];let r=null;for(const o of e)try{console.log("Trying API endpoint:",o);const n=await fetch(o,{headers:{Authorization:`Bearer ${t}`,Accept:"application/json","Content-Type":"application/json"}});if(console.log(`API response status for ${o}:`,n.status),console.log("API response headers:",Object.fromEntries(n.headers.entries())),!n.ok){const s=await n.text();console.error(`API error response from ${o}:`,s),r=new Error(`API request failed: ${n.status} - ${s}`);continue}const a=n.headers.get("content-type");if(console.log("Response content-type:",a),!a||!a.includes("application/json")){const s=await n.text();console.error(`Non-JSON response from ${o}:`,s.substring(0,200)),r=new Error(`Expected JSON response but got: ${a}. Response: ${s.substring(0,200)}`);continue}const i=await n.json();if(console.log("User data received from",o,":",i),o.includes("api.kick.com/public/v1/users")&&i.data&&Array.isArray(i.data)&&i.data.length>0){const s=i.data[0];console.log("üîÑ Getting chatroom ID for user:",s.name);let c=null;try{const u=await fetch(`https://kick.com/api/v1/channels/${s.name}`,{headers:{Accept:"application/json","Content-Type":"application/json"}});u.ok&&(c=(await u.json()).chatroom?.id,console.log("Chatroom ID found:",c))}catch(u){console.warn("Could not get chatroom ID:",u)}return{id:s.user_id,username:s.name,email:s.email,profile_picture:s.profile_picture,chatroom:{id:c}}}return i}catch(n){console.error(`Error with endpoint ${o}:`,n),r=n instanceof Error?n:new Error(String(n));continue}throw r||new Error("All API endpoints failed")}catch(e){throw console.error("Failed to fetch user info:",e),e}}export{l as C,m as b,y as e,k as f,_ as i,T as t};
//# sourceMappingURL=central-config-a0a861d2.js.map
