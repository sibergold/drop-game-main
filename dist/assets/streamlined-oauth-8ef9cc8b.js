import{a as n}from"./util-52d0e744.js";import{C as o,i as a,t as h,e as g,f as m,b as y}from"./central-config-a0a861d2.js";class u{errorDiv;successDiv;quickAuthorizeBtn;setupSection;resultSection;overlayUrlDiv;copyUrlBtn;openObsBtn;constructor(){console.log("StreamlinedKickOAuth constructor called"),this.errorDiv=document.getElementById("error-message"),this.successDiv=document.getElementById("success-message"),this.quickAuthorizeBtn=document.getElementById("quick-authorize-btn"),this.setupSection=document.getElementById("setup-section"),this.resultSection=document.getElementById("result-section"),this.overlayUrlDiv=document.getElementById("overlay-url"),this.copyUrlBtn=document.getElementById("copy-url-btn"),this.openObsBtn=document.getElementById("open-obs-btn"),console.log("DOM elements found:",{errorDiv:!!this.errorDiv,successDiv:!!this.successDiv,quickAuthorizeBtn:!!this.quickAuthorizeBtn,setupSection:!!this.setupSection,resultSection:!!this.resultSection,overlayUrlDiv:!!this.overlayUrlDiv,copyUrlBtn:!!this.copyUrlBtn,openObsBtn:!!this.openObsBtn}),this.init()}init(){if(console.log("StreamlinedKickOAuth init() called"),console.log("CLIENT_ID:",o.CLIENT_ID),console.log("isCentralConfigValid():",a()),n.code){console.log("OAuth return detected:",{code:n.code,state:n.state}),this.handleOAuthReturn();return}console.log("Setting up event listeners"),this.quickAuthorizeBtn.addEventListener("click",()=>{console.log("Quick authorize button clicked"),this.startStreamlinedOAuth()}),this.copyUrlBtn.addEventListener("click",()=>this.copyOverlayUrl()),this.openObsBtn.addEventListener("click",()=>this.openInOBS());const e=document.createElement("button");e.textContent="🔧 Test Netlify Functions",e.className="big-button",e.style.marginTop="10px",e.style.backgroundColor="#ff6b35",e.addEventListener("click",async()=>{e.disabled=!0,e.textContent="🔄 Testing...";const t=await h();e.disabled=!1,e.textContent=t?"✅ Functions Working":"❌ Functions Failed",setTimeout(()=>{e.textContent="🔧 Test Netlify Functions"},3e3)}),this.setupSection.appendChild(e),a()?console.log("Central config is valid, button should be enabled"):(console.log("Central config is invalid"),this.showError(o.UI_CONFIG.messages.error_no_client_id),this.quickAuthorizeBtn.disabled=!0)}async handleOAuthReturn(){try{if(console.log("🔄 Handling OAuth return..."),console.log("Current URL:",window.location.href),console.log("URL params:",n),n.error)throw new Error(`OAuth error: ${n.error} - ${n.error_description||"No description"}`);const e=sessionStorage.getItem("kick_oauth_state");if(console.log("Stored state:",e),console.log("Received state:",n.state),n.state&&e&&n.state!==e)throw new Error("Invalid state parameter - possible CSRF attack");const t=n.code;if(console.log("Authorization code:",t?"YES":"NO"),!t)throw new Error("No authorization code received");console.log("🔄 Starting token exchange...");const i=await g(t,window.location.href.split("?")[0]);if(console.log("Access token received:",i?"YES":"NO"),!i)throw new Error("Failed to exchange code for access token");const r=await m(i);if(!r)throw new Error("Failed to get user information");const s=r.username,l=r.chatroom?.id;if(!l)throw new Error(o.UI_CONFIG.messages.error_no_chatroom);const d=this.buildOverlayUrl(i,s,l.toString());this.showSuccess(d),setTimeout(()=>{console.log("🔄 Cleaning up URL and redirecting...");const c=window.location.href.split("?")[0];window.history.replaceState({},document.title,c)},2e3)}catch(e){console.error("OAuth error:",e),this.showError(`Authorization failed: ${e instanceof Error?e.message:"Unknown error"}`),setTimeout(()=>{console.log("🔄 Cleaning up URL after error...");const t=window.location.href.split("?")[0];window.history.replaceState({},document.title,t)},3e3)}}buildOverlayUrl(e,t,i){let r=`${window.location.origin}/index.html#access_token=${e}&channel=${t}&chatroomId=${i}`;const s=localStorage.getItem("selectedTheme");return s&&(r+=`&theme=${encodeURIComponent(s)}`,console.log(`🎨 Adding theme to overlay URL: ${s}`)),r+="&pixelplush=true",["gravity","gravity_chute","max_velocity","wait"].forEach(l=>{const c=document.getElementById(l)?.value;c&&c.trim()&&(r+=`&${l}=${encodeURIComponent(c)}`)}),r}async startStreamlinedOAuth(){if(console.log("startStreamlinedOAuth() called"),!a()){console.log("Central config invalid in startStreamlinedOAuth"),this.showError(o.UI_CONFIG.messages.error_no_client_id);return}try{console.log("Building OAuth URL...");const e=await y(window.location.href.split("?")[0]);console.log("OAuth URL built:",e),this.quickAuthorizeBtn.textContent=o.UI_CONFIG.messages.loading,this.quickAuthorizeBtn.disabled=!0,console.log("Redirecting to OAuth URL..."),window.location.href=e}catch(e){console.error("OAuth start error:",e),this.showError(`Failed to start authorization: ${e instanceof Error?e.message:"Unknown error"}`)}}showSuccess(e){this.setupSection.style.display="none",this.resultSection.style.display="block",this.overlayUrlDiv.textContent=e,this.successDiv.textContent=o.UI_CONFIG.messages.success,this.successDiv.style.display="block",this.errorDiv.style.display="none"}showError(e){this.errorDiv.textContent=e,this.errorDiv.style.display="block",this.successDiv.style.display="none",this.quickAuthorizeBtn.textContent="🚀 Start with Kick Authorization",this.quickAuthorizeBtn.disabled=!a()}async copyOverlayUrl(){try{const e=this.overlayUrlDiv.textContent||"";await navigator.clipboard.writeText(e);const t=this.copyUrlBtn.textContent;this.copyUrlBtn.textContent=o.UI_CONFIG.messages.copied,this.copyUrlBtn.style.background=o.UI_CONFIG.theme.primary_color,setTimeout(()=>{this.copyUrlBtn.textContent=t,this.copyUrlBtn.style.background=""},2e3)}catch(e){console.error("Copy failed:",e),this.showError("Failed to copy URL to clipboard")}}openInOBS(){const e=this.overlayUrlDiv.textContent||"",t=`${o.OBS_CONFIG.deep_link_protocol}addsource/browser_source?url=${encodeURIComponent(e)}&width=${o.OBS_CONFIG.default_width}&height=${o.OBS_CONFIG.default_height}&name=${encodeURIComponent(o.OBS_CONFIG.source_name)}`;try{window.open(t,"_blank"),setTimeout(()=>{alert(`If OBS didn't open automatically:

1. Open OBS Studio
2. Add a new Browser Source
3. Set URL to: ${e}
4. Set Width: 1920, Height: 1080
5. Uncheck "Shutdown source when not visible"`)},1e3)}catch(i){console.error("OBS open failed:",i),alert(`Manual OBS Setup:

1. Open OBS Studio
2. Add a new Browser Source
3. Set URL to: ${e}
4. Set Width: 1920, Height: 1080
5. Uncheck "Shutdown source when not visible"`)}}}console.log("Document ready state:",document.readyState);document.readyState==="loading"?(console.log("Document still loading, waiting for DOMContentLoaded"),document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded event fired, initializing StreamlinedKickOAuth"),new u})):(console.log("Document already loaded, initializing StreamlinedKickOAuth immediately"),new u);export{u as StreamlinedKickOAuth};
//# sourceMappingURL=streamlined-oauth-8ef9cc8b.js.map
