import{a as r}from"./util-52d0e744.js";import{C as t,i as a,e as u,f as g,b as m}from"./central-config-8b399e77.js";class h{errorDiv;successDiv;quickAuthorizeBtn;setupSection;resultSection;overlayUrlDiv;copyUrlBtn;openObsBtn;constructor(){console.log("StreamlinedKickOAuth constructor called"),this.errorDiv=document.getElementById("error-message"),this.successDiv=document.getElementById("success-message"),this.quickAuthorizeBtn=document.getElementById("quick-authorize-btn"),this.setupSection=document.getElementById("setup-section"),this.resultSection=document.getElementById("result-section"),this.overlayUrlDiv=document.getElementById("overlay-url"),this.copyUrlBtn=document.getElementById("copy-url-btn"),this.openObsBtn=document.getElementById("open-obs-btn"),console.log("DOM elements found:",{errorDiv:!!this.errorDiv,successDiv:!!this.successDiv,quickAuthorizeBtn:!!this.quickAuthorizeBtn,setupSection:!!this.setupSection,resultSection:!!this.resultSection,overlayUrlDiv:!!this.overlayUrlDiv,copyUrlBtn:!!this.copyUrlBtn,openObsBtn:!!this.openObsBtn}),this.init()}init(){if(console.log("StreamlinedKickOAuth init() called"),console.log("CLIENT_ID:",t.CLIENT_ID),console.log("isCentralConfigValid():",a()),r.code){console.log("OAuth return detected:",{code:r.code,state:r.state}),this.handleOAuthReturn();return}console.log("Setting up event listeners"),this.quickAuthorizeBtn.addEventListener("click",()=>{console.log("Quick authorize button clicked"),this.startStreamlinedOAuth()}),this.copyUrlBtn.addEventListener("click",()=>this.copyOverlayUrl()),this.openObsBtn.addEventListener("click",()=>this.openInOBS()),a()?console.log("Central config is valid, button should be enabled"):(console.log("Central config is invalid"),this.showError(t.UI_CONFIG.messages.error_no_client_id),this.quickAuthorizeBtn.disabled=!0)}async handleOAuthReturn(){try{console.log("ðŸ”„ Handling OAuth return..."),console.log("URL params:",r);const e=sessionStorage.getItem("kick_oauth_state");if(console.log("Stored state:",e),console.log("Received state:",r.state),r.state&&e&&r.state!==e)throw new Error("Invalid state parameter - possible CSRF attack");const o=r.code;if(console.log("Authorization code:",o?"YES":"NO"),!o)throw new Error("No authorization code received");const n=await u(o,window.location.href.split("?")[0]);if(console.log("Access token received:",n?"YES":"NO"),!n)throw new Error("Failed to exchange code for access token");const i=await g(n);if(!i)throw new Error("Failed to get user information");const s=i.username,l=i.chatroom?.id;if(!l)throw new Error(t.UI_CONFIG.messages.error_no_chatroom);const d=this.buildOverlayUrl(n,s,l.toString());this.showSuccess(d),setTimeout(()=>{console.log("ðŸ”„ Cleaning up URL and redirecting...");const c=window.location.href.split("?")[0];window.history.replaceState({},document.title,c)},2e3)}catch(e){console.error("OAuth error:",e),this.showError(`Authorization failed: ${e instanceof Error?e.message:"Unknown error"}`),setTimeout(()=>{console.log("ðŸ”„ Cleaning up URL after error...");const o=window.location.href.split("?")[0];window.history.replaceState({},document.title,o)},3e3)}}buildOverlayUrl(e,o,n){let i=`${window.location.origin}/index.html#access_token=${e}&channel=${o}&chatroomId=${n}`;const s=localStorage.getItem("selectedTheme");return s&&(i+=`&theme=${encodeURIComponent(s)}`,console.log(`ðŸŽ¨ Adding theme to overlay URL: ${s}`)),i+="&pixelplush=true",["gravity","gravity_chute","max_velocity","wait"].forEach(l=>{const c=document.getElementById(l)?.value;c&&c.trim()&&(i+=`&${l}=${encodeURIComponent(c)}`)}),i}async startStreamlinedOAuth(){if(console.log("startStreamlinedOAuth() called"),!a()){console.log("Central config invalid in startStreamlinedOAuth"),this.showError(t.UI_CONFIG.messages.error_no_client_id);return}try{console.log("Building OAuth URL...");const e=await m(window.location.href.split("?")[0]);console.log("OAuth URL built:",e),this.quickAuthorizeBtn.textContent=t.UI_CONFIG.messages.loading,this.quickAuthorizeBtn.disabled=!0,console.log("Redirecting to OAuth URL..."),window.location.href=e}catch(e){console.error("OAuth start error:",e),this.showError(`Failed to start authorization: ${e instanceof Error?e.message:"Unknown error"}`)}}showSuccess(e){this.setupSection.style.display="none",this.resultSection.style.display="block",this.overlayUrlDiv.textContent=e,this.successDiv.textContent=t.UI_CONFIG.messages.success,this.successDiv.style.display="block",this.errorDiv.style.display="none"}showError(e){this.errorDiv.textContent=e,this.errorDiv.style.display="block",this.successDiv.style.display="none",this.quickAuthorizeBtn.textContent="ðŸš€ Start with Kick Authorization",this.quickAuthorizeBtn.disabled=!a()}async copyOverlayUrl(){try{const e=this.overlayUrlDiv.textContent||"";await navigator.clipboard.writeText(e);const o=this.copyUrlBtn.textContent;this.copyUrlBtn.textContent=t.UI_CONFIG.messages.copied,this.copyUrlBtn.style.background=t.UI_CONFIG.theme.primary_color,setTimeout(()=>{this.copyUrlBtn.textContent=o,this.copyUrlBtn.style.background=""},2e3)}catch(e){console.error("Copy failed:",e),this.showError("Failed to copy URL to clipboard")}}openInOBS(){const e=this.overlayUrlDiv.textContent||"",o=`${t.OBS_CONFIG.deep_link_protocol}addsource/browser_source?url=${encodeURIComponent(e)}&width=${t.OBS_CONFIG.default_width}&height=${t.OBS_CONFIG.default_height}&name=${encodeURIComponent(t.OBS_CONFIG.source_name)}`;try{window.open(o,"_blank"),setTimeout(()=>{alert(`If OBS didn't open automatically:

1. Open OBS Studio
2. Add a new Browser Source
3. Set URL to: ${e}
4. Set Width: 1920, Height: 1080
5. Uncheck "Shutdown source when not visible"`)},1e3)}catch(n){console.error("OBS open failed:",n),alert(`Manual OBS Setup:

1. Open OBS Studio
2. Add a new Browser Source
3. Set URL to: ${e}
4. Set Width: 1920, Height: 1080
5. Uncheck "Shutdown source when not visible"`)}}}console.log("Document ready state:",document.readyState);document.readyState==="loading"?(console.log("Document still loading, waiting for DOMContentLoaded"),document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded event fired, initializing StreamlinedKickOAuth"),new h})):(console.log("Document already loaded, initializing StreamlinedKickOAuth immediately"),new h);export{h as StreamlinedKickOAuth};
//# sourceMappingURL=streamlined-oauth-c2d81357.js.map
